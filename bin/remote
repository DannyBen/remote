#!/usr/bin/env ruby

prefix = File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
require "#{prefix}/remote"

if __FILE__ == $0
  if ARGV.first == '--sample'
  data = "staging: &defaults
  host: staging.myserver.com
  # Everything below are optional.
  user: rsc
  path: /home/rsc/app/current
  key: ~/.ssh/id_rsa.pub
  commands:
    # These are optional aliases.
    # Typing 'remoter staging rake x' will execute this, with %s replaced by 'x'.
    rake: 'bin/rake %s'

    # Typing 'remoter staging deploy' will execute this script.
    deploy: |
      echo Deploying...
      git pull
      echo Done!

# This is an example of how to define another server via inheritance.
live:
  <<: *defaults
  path: /home/rsc/app
  host: www.myserver.com"

    begin
      File.open(Remote::App.config_file, 'w') { |f| f.write(data) }
      puts "Wrote #{Remote::App.config_file}."
    rescue => e
      puts "Error: unable to save to #{Remote::App.config_file}."
    end
    exit
  end

  if ARGV.first == "--list"
    Remote::App.list
    exit
  end

  if ARGV.size < 2
    puts "Executes a command at a remote server."
    puts "Usage: #{$0} <server> <command>"
    puts "       #{$0} <server>,<server2>,<serverN> <command>"
    puts "       #{$0} --sample"
    puts ""
    puts "Servers are defined in #{Remote::App.config_file}. Use `#{$0} --sample` to"
    puts "create a sample config file."
    puts ""
    puts "Example:"
    puts ""
    puts "    # Executes 'irb -r./init' in the server called 'live'."
    puts "    #{$0} live irb -r./init"
    puts ""
    exit
  end

  servers = ARGV.shift.to_s.split(',')
  command = ARGV

  Remote::App.run servers, *command
end
